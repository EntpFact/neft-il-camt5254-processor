server:
  port: ${port:8081}

logging:
  level:
    root: ${loglevel:INFO}
    #DEBUG

spring:
  kafka:
    listener:
      concurrency: 1
    consumer:
      properties:
        bootstrap.servers: 34.28.251.45:9092
        #34.28.251.45:9092
        #20.192.24.194:39092
        auto.offset.reset: earliest
        key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
        group.id: nil-router-consumer
    producer:
      properties:
        bootstrap.servers: 34.28.251.45:9092
        key.serializer: org.apache.kafka.common.serialization.StringSerializer
        value.serializer: org.apache.kafka.common.serialization.StringSerializer
        enable.auto.commit: false
        missing.topics.fatal: false

  ######################################
  #########  DB PROPERTIES #############
  ######################################

  datasource:
    url: ${datasourceUrl:jdbc:postgresql://34.135.239.235:5432/postgresdb}
    username: ${dbusername:admin}
    password: ${password:test123}
    driver-class-name: ${diverclassname:org.postgresql.Driver}


routing:
  header: testHeader
  mappings:
    pacs.008.001.09: pacs008
    camt.059.001.06: camt59
    camt.054.001.08: camt_52_54
    camt.052.001.08: camt_52_54
    admi.004.001.01: admi004
    admi.004.001.02: admi004
    pacs.002.001.11: pacs002
    pacs.004.001.10: pacs004
    #camt.059.001.06: camt59
    admi: channelA

message:
  xpath:
    mappings:
      pacs.008.001.09: "//*[local-name()='CdtTrfTxInf']"
      camt.059.001.06: "//*[local-name()='OrgnlNtfctnRef']"
      #camt.054.001.08: "//*[local-name()='TxDtls']"
      #camt.052.001.08: "//*[local-name()='TxDtls']"
      pacs.004.001.10: "//*[local-name()='TxInf']"
      # Add more message types and their XPaths as needed
    #pacs.008.001.09: pacs008

camt54:
  db:
    validate_pacs008_pacs002_query: SELECT COUNT(1) FROM network_il.batch_tracker WHERE batch_id = :batchId AND msg_type IN ('pacs.008.001.09', 'pacs.002.001.11') AND status = 'Hold';
    update_batch_tracker_hold_by_msgid_query: UPDATE network_il.batch_tracker SET status = 'Hold' WHERE msg_id = :msgId

errormessage:
  pacs008: EPH
  pacs004: EPH
  pacs002: EPH

  bothSwitchMsg:
    - "f20"
    - "f23"
    - "f25"
    - "f26"
    - "f29"
    - "f27"
    - "f95"
    - "camt.052"
    - "camt.054"
    - "camt.059"


topic:
  dispatchertopic: DISPATCHERTOPIC

batch-tracker:
  allowedMsgTypes:
    - pacs.008.001.09
    - pacs.002.001.11
    - camt.054.001.08

retry:
  transactionAudit:
    maxAttempts: ${RETRY_TXN_MAX_ATTEMPTS:3}
    backoff:
      delay: ${RETRY_TXN_BACKOFF_DELAY_MS:200}
      multiplier: ${RETRY_TXN_BACKOFF_MULTIPLIER:2.0}


